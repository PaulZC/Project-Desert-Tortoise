TODO
[ ] Add in total execution time summary for recorded files (for benchmarking porpoises)
[ ] Maybe give some quick instructions screen if no files are passed, or when the audio channel is opened (like what frequencies to tune to)
[ ] Don't create zero sized output files
[ ] Write index numbers (line numbers) before time
[ ] Write quality indicator value to minorframe after time
[ ] Find out how to estimate number of points for RAW files (read file size and divide sort of thing)
[ ] Decide if it is worth it to use function pointers for configurations RAW vs WAVE
[ ] Figure out why ANSI color stopped working in the console

COMMONLIBS
October 7, 2016
-Wave.c
--Added function to getComplexRawChunks() which is a small tweak on getComplexWaveChunks() due to the IEEE floats it reads in instead of integers. 

Sept 27, 2016
-Lowwpassfilter.c
--Added skipping of zero stuffed places to remove the interpolation penalty

Sept 25, 2016
-Reversed idea to use bytesync.c as a common library due to the fact that packetized and nonpacketized streams have a different needs. Perhaps these could be POESbytesyc and ARGOSbytesync to avoid updating the two versions each time?
-included stdint.h to wave.c to cover int16_t data_in_channel because mingw suddenly stopped compiling it	
-IDEA! Unlock (or even reset) the PLL if the quality estimator is very low for a long time-- we may have a false lock on a nearby signal

POES POST
October 7, 2016
-main.c
--Added #define's for quality thresholds to reduce magic numbers. 
--Added ability to read RAW files!
--Tweaked DSP_PLL_LOCK_THRESH to 0.05 (was 0.025) as it was locking falsely onto known good data. was was (0.1) failed to lock quickly and let lots of frames slip by. (0.05) worked well across multiple data sets. Maybe add a command line override for power users?

Sept 28, 2016
-main.c
--Fixed crash bug caused by calling free(dataStreamReal) multiple times

Sept 25, 2016
-Restored archived bytesync.c
--Reverted two passed variables that were needed to decode universal streams (length and offset) -- now specific again
--Syncrhonized updated 'long idx' to 'unsigned long idx'
--Synchronized 'memset(historyBufferCirc, '.', sizeof(char) * syncWordLength);' to 'memset(historyBufferCirc, 48, sizeof(char) * syncWordLength);'
--Syncrhonized addition of 'i' to inverted frames
-Fixed typo: WAS DSP_PLL_LOCK_ALPA  SB DSP_PLL_LOCK_ALPHA
--Setting to 0.00005 for POES (as it is for POES REALTIME)
-Added output file date and time naming
-fixed bug where check for filename was done after trying to use it -- with expected results

POES REALTIME
October 7, 2016
-main.c
--Added #define's for quality thresholds to reduce magic numbers. 
Sept 28, 2016
-main.c
--Fixed crash bug caused by calling free(dataStreamReal) multiple times
Sept 25, 2016
-Restored bytesync.c from POES POST using updates documented
--Reverted function call in main to old format (removed two passed variables)
-Fixed typo: WAS DSP_PLL_LOCK_ALPA  SB DSP_PLL_LOCK_ALPHA

ARGOS POST
Sept 28, 2016
-main.c
--Fixed crash bug caused by calling free(dataStreamReal) multiple times
Sept 27, 2016
-Forgot to free buffer for logsignalstream. Fixed.
-Implemented raw data output upon command line flag
Sept 25, 2016
-Fixed typo: WAS DSP_PLL_LOCK_ALPA  SB DSP_PLL_LOCK_ALPHA
-Restored archived bytesync.c
--Reverted two passed variables that were needed to decode universal streams (length and offset) -- now specific again
--Syncrhonized updated 'long idx' to 'unsigned long idx'
--Synchronized char one char zero and char byte to be static
--Synchronized 'memset(historyBufferCirc, '.', sizeof(char) * syncWordLength);' to 'memset(historyBufferCirc, 48, sizeof(char) * syncWordLength);'
--Changed minorFrameShiftFlag to packetShiftFlag
--Changed minorFrameFile to packetFile
--Changes minorFramesFound to packetsFound
--commented out POES specific syncword write to log file, but probably should put ARGOS specific?
-Added magic numbers to defines list
-Uncommented the PLL locksig squelch function
-Updated DSP_AGCC_GAIN 0.0015 from 0.001 to sync with latest ARGOS REALTIME which was newest branch
-updated DSP_PLL_ACQ_GAIN and DSP_PLL_TRCK_GAIN from 0.0015 to 0.015 based on testing of wave data
-added program greeting and build date
-various synchronizations of form to ARGOS REALTIME build
-Updated status printout text to say packets instead of frames
-Added output file date and time naming
-fixed bug where check for filename was done after trying to use it -- with expected results

ARGOS REALTIME
Sept 28, 2016
-main.c
--Fixed crash bug caused by calling free(dataStreamReal) multiple times
Sept 27, 2016
-Forgot to free buffer for logsignalstream. Fixed.
Sept 25, 2016
-Restored archived bytesync.c
--Reverted two passed variables that were needed to decode universal streams (length and offset) -- now specific again
-Quick test decoded 5/5 packets in 12-21-56_401650kHz.wav when played back using audacity (0.5 output volume)
-Observation: When I increase the chunksize it shifts the time axis -- this shouldn't happen?

C++
POES REALTIME
Sept 27, 2016
-Lowpass.cpp
--Added skipping of zero stuffed places to remove the interpolation penalty
Sept 25, 2016
-Bytesync.cpp
--ByteSyncOnSyncword::Work()
---Chnaged idx to unsigned